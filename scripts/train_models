#!/bin/bash -e

####################################################################################### 
#              REVERB  CHALLENGE -  automatic speech recognition                      # 
#                                                                                     # 
# scripts and tools written by:                                                       # 
# - Volker Leutnant,                                                                  # 
# - Marc Puels,                                                                       # 
# - Reinhold Haeb-Umbach                                                              # 
#                                                                                     # 
# Department of Communications Engineering, University of Paderborn, Germany          # 
#                                                                                     # 
# support: reverb-asr@lab.ntt.co.jp                                                   #
#######################################################################################

. printlib

print_header "$0"

if [ -e LOCAL_CONFIG ] ; then
    . LOCAL_CONFIG
else
    print_msg 'Copy LOCAL_CONFIG.template to LOCAL_CONFIG and adapt paths as needed.'
    exit 1
fi

pushd .
cd $WORKPATH


startTime=`date`

#-------------------------------------
# 1. clean mfcc convert
#-------------------------------------


# DO NOT CHANGE THIS ORDER
clean_mfccInOrder=( \
  wsjcam0_code_data \
)

for script in ${clean_mfccInOrder[@]}
do
  # execute script and write to log file
  print_msg "Executing ${script}"
  date > logs/${script}.log
  bash scripts/${script}  2>&1 | tee -a logs/${script}.log
  date >> logs/${script}.log
done

#-------------------------------------
# 2. Training for clean acoustic model
#-------------------------------------


# DO NOT CHANGE THIS ORDER
trainScriptsInOrder=( \
  wsj_train_monophones \
  wsj_train_triphones \
)

for script in ${trainScriptsInOrder[@]}
do
  # execute script and write to log file
  print_msg "Executing ${script}"
  date > logs/${script}.log
  bash scripts/${script}  2>&1 | tee -a logs/${script}.log
  date >> logs/${script}.log
done

#------------------------------------------------------
# 3. mctrain mfcc convert
#------------------------------------------------------

mctrain_mfccReverbWSJ=(\
    reverbwsjcam0_code_data_training\
)
for script in ${mctrain_mfccReverbWSJ[@]}
do
  # execute script and write to log file
  print_msg "Executing ${script}"
  date > logs/${script}.log
  bash scripts/${script}  2>&1 | tee -a logs/${script}.log
  date >> logs/${script}.log
done

echo "mctrain output ready" 
read Wait
 
#------------------------------------------------------
# 4. Re-training for for multi-condition acoustic model
#------------------------------------------------------

trainScriptsForReverbWSJ=(\
    reverbwsjcam0_retrain\	
)
for script in ${trainScriptsForReverbWSJ[@]}
do
  # execute script and write to log file
  print_msg "Executing ${script}"
  date > logs/${script}.log
  bash scripts/${script}  2>&1 | tee -a logs/${script}.log
  date >> logs/${script}.log
done

endTime=`date`

print_msg "Start: $startTime\n End: $endTime"

popd
exit
